{
  "openapi": "3.0.0",
  "info": {
    "title": "Document Securities API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://absch.cbddev.xyz/api/v2013"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    },
    {
      "ApiKeyAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Add the `Realm` header with value `ABS-DEV`."
      }
    }
  },
  "paths": {
    "/documents/{uid}/securities/create": {
      "get": {
        "summary": "Check if a document can be created based on supplied metadata",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9\\-_]{11,128}$"
            },
            "description": "Identifier of the document. The value is case-sensitive."
          },
          {
            "name": "schema",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "absPermit"
            },
            "description": "Specify the document common-format posted (type/schema)"
          },
          {
            "name": "metadata",
            "in": "query",
            "required": false,
            "schema": {
              "type": "object"
            },
            "description": "Document metadata to use to determine security access. List of parameters may vary depending on the type of document."
          },
          {
            "name": "government",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["ISO 3166-1 alpha-2"]
            },
            "description": "Government code to which the record should belong. For national records only."
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["application/json"]
            },
            "description": "Result format. Allowed value: 'application/json'."
          }
        ],
        "responses": {
          "200": {
            "description": "Success response indicating if the document creation is allowed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isAllowed": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error due to missing or invalid authorization token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401
                    },
                    "code": {
                      "type": "string",
                      "example": "unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error indicating the operation or access to the data is not allowed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 403
                    },
                    "code": {
                      "type": "string",
                      "example": "forbidden"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error due to missing or invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "oneOf": [
                    {
                      "properties": {
                        "statusCode": {
                          "type": "integer",
                          "example": 400
                        },
                        "code": {
                          "type": "string",
                          "example": "mandatory"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": ["fieldName1", "fieldName2"]
                        }
                      }
                    },
                    {
                      "properties": {
                        "statusCode": {
                          "type": "integer",
                          "example": 400
                        },
                        "code": {
                          "type": "string",
                          "example": "invalidParameter"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": ["date"]
                        },
                        "message": {
                          "type": "string",
                          "example": "Date format is invalid"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}
