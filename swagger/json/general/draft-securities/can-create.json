{
  "openapi": "3.0.0",
  "info": {
    "title": "Draft Securities API",
    "version": "2.13.0",
    "description": "Tells if a draft can be created based on supplied metadata."
  },
  "servers": [
    {
      "url": "https://absch.cbddev.xyz/api/v2013"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    },
    {
      "ApiKeyAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Add the `Realm` header with value `ABS-DEV`."
      }
    }
  },
  "paths": {
    "/documents/{uid}/versions/draft/securities/create": {
      "get": {
        "summary": "Check if a draft can be created based on supplied metadata",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9\\-_]{11,128}$"
            },
            "description": "Identifier of the document. The value is case-sensitive."
          },
          {
            "name": "schema",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specify the document common-format posted (type / schema). Can be omitted if a document already exists for the specified uid."
          },
          {
            "name": "metadata",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "government": {
                  "type": "string",
                  "enum": ["ISO 3166-1 alpha-2"]
                }
              }
            },
            "description": "Document metadata to use to determine security access. List of parameters may vary depending on the type of document."
          },
          {
            "name": "realm",
            "in": "header",
            "schema": {
              "type": "string",
              "enum": ["ABS", "CHM", "BCH", "ABS-DEV", "BCH-DEV", "CHM-DEV"]
            },
            "description": "Context in which the Clearing-House request is made."
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string",
              "enum": ["application/json"]
            },
            "description": "Result format."
          }
        ],
        "responses": {
          "200": {
            "description": "Draft can be created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "canCreate": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User does not have permission to create the draft.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "string"
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
