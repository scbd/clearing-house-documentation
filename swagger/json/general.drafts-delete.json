{
  "openapi": "3.0.3",
  "info": {
    "title": "Document Drafts API",
    "version": "2.13.0",
    "description": "API endpoints for managing document drafts, including publishing and unpublishing drafts."
  },
  "servers": [
    {
      "url": "https://absch.cbddev.xyz/api/v2013"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    },
    {
      "ApiKeyAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Add the `Realm` header with value `ABS-DEV`."
      }
    }
  },
  "paths": {
    "/documents/{uid}/versions/draft": {
      "delete": {
        "summary": "Unpublish a document draft",
        "description": "This endpoint unpublishes a draft version of a document. It removes the draft from the system, making it no longer available.",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9\\-_]{11,128}$"
            },
            "description": "Identifier of the document. The value is case-sensitive."
          }
        ],
        "headers": {
          "Authorization": {
            "description": "Token used to authenticate the request.",
            "schema": {
              "type": "string"
            }
          },
          "Realm": {
            "description": "Context in which the Clearing-House request is made. Allowed values: 'ABS', 'CHM'.",
            "schema": {
              "type": "string",
              "enum": ["ABS", "CHM"]
            }
          },
          "Accept": {
            "description": "Result format.",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Draft successfully unpublished. No body is provided.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. The request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400
                    },
                    "code": {
                      "type": "string",
                      "example": "invalidParameter"
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["date"]
                    },
                    "message": {
                      "type": "string",
                      "example": "Date format is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks valid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401
                    },
                    "code": {
                      "type": "string",
                      "example": "unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request is understood, but it has been refused.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 403
                    },
                    "code": {
                      "type": "string",
                      "example": "forbidden"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested document was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "code": {
                      "type": "string",
                      "example": "notFound"
                    },
                    "message": {
                      "type": "string",
                      "example": "Document not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
