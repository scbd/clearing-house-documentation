{
  "openapi": "3.0.0",
  "info": {
    "title": "Draft Locks API",
    "version": "2.13.0",
    "description": "API for managing draft locks."
  },
  "servers": [
    {
      "url": "https://absch.cbddev.xyz/api/v2013"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    },
    {
      "ApiKeyAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Add the `Realm` header with value `ABS-DEV`."
      }
    }
  },
  "paths": {
    "/documents/{uid}/versions/draft/locks/{lockID}": {
      "delete": {
        "summary": "Unlock a draft",
        "description": "Unlock a draft using a specific lockID.",
        "operationId": "unlockDraft",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9\\-_]{11,128}$"
            },
            "description": "Identifier of the document. The value is case-sensitive."
          },
          {
            "name": "lockID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9\\-_]{11,128}$"
            },
            "description": "Identifier that uniquely identifies a lock."
          }
        ],
        "headers": {
          "Authorization": {
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Token to use to authenticate the request"
          },
          "Realm": {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["ABS", "CHM"]
            },
            "description": "Context in which the Clearing-House request is made."
          },
          "Accept": {
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["application/json"]
            },
            "description": "Result format."
          }
        },
        "responses": {
          "200": {
            "description": "Successful unlock",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lockID": {
                      "type": "string",
                      "example": "012345abcd"
                    },
                    "unlockedOn": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2013-10-01T22:08:17.073Z"
                    },
                    "unlockedBy": {
                      "type": "object",
                      "properties": {
                        "userID": {
                          "type": "integer",
                          "example": 123
                        },
                        "firstName": {
                          "type": "string",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Smith"
                        },
                        "email": {
                          "type": "string",
                          "example": "fake.john.smith@cbd.int"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "code": {
                      "type": "string",
                      "example": "notFound"
                    },
                    "message": {
                      "type": "string",
                      "example": "Document not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401
                    },
                    "code": {
                      "type": "string",
                      "example": "unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 403
                    },
                    "code": {
                      "type": "string",
                      "example": "forbidden"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "oneOf": [
                    {
                      "properties": {
                        "statusCode": {
                          "type": "integer",
                          "example": 400
                        },
                        "code": {
                          "type": "string",
                          "example": "invalidParameter"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "date"
                          }
                        },
                        "message": {
                          "type": "string",
                          "example": "Date format is invalid"
                        }
                      }
                    },
                    {
                      "properties": {
                        "statusCode": {
                          "type": "integer",
                          "example": 400
                        },
                        "code": {
                          "type": "string",
                          "example": "mandatory"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "fieldName1"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}
